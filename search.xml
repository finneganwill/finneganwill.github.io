<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Nodejs安装教程</title>
    <url>/2022/03/16/Nodejs%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<ul>
<li><p>没有特殊操作，有需要可自行修改安装目录，其他直接下一步即可</p>
</li>
<li><p>安装完成后，可在命令行窗口 <code>win+R -&gt; cmd</code> 查看是否安装成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看node版本</span></span><br><span class="line">node -v</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看npm版本</span></span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

 </li>
<li><p>修改全局模块和缓存路径（可选）</p>
<p>默认情况下使用npm安装全局模块时，安装位置在C盘下：</p>
 

<p>如果想更改全局模块的安装位置，可通过以下设置进行修改：</p>
<ol>
<li>在安装目录下新建两个目录【node_global】和【node_cache】，分别存放全局模块和缓存，并在【node_global】下创建【node_model】目录，用于配置环境变量</li>
</ol>
<p><img src="Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20220315100436491.png" alt="image-20220315100436491"> </p>
<ol start="2">
<li><p>指定文件夹，在cmd中使用一下命令指定这两个文件夹：</p>
 </li>
<li><p>修改环境变量。配置完上述目录后需要修改环境变量：</p>
<ul>
<li><p>系统变量中新建</p>
<p>变量名：NODE_PATH </p>
<p>变量值：【node_global】文件夹下的【node_modules】文件夹</p>
</li>
<li><p>用户变量中Path变量</p>
<p>将默认的npm路径修改为新建的【node_global】路径</p>
</li>
</ul>
</li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>Nodejs</category>
        <category>安装教程</category>
      </categories>
      <tags>
        <tag>Nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/03/12/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Hexo+Github搭建个人静态博客（Win）</title>
    <url>/2022/03/13/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>Hexo是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h1 id="1-什么是静态博客？"><a href="#1-什么是静态博客？" class="headerlink" title="1. 什么是静态博客？"></a>1. 什么是静态博客？</h1><p>所谓静态博客就是通过生成工具（eg：Hexo；Halo等），直接将作者所书写的博文编译成最终的 html；css；js 等静态文件。作者/博主只需将生成的文件部署在服务器 面即可被在互联网中访问。 其他用户通过浏览器访问服务器就会浏览到博客啦。</p>
<h1 id="2-安装教程"><a href="#2-安装教程" class="headerlink" title="2. 安装教程"></a>2. 安装教程</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><p>下载：</p>
<ul>
<li><a href="https://nodejs.org/">Node.js 官网</a> </li>
<li><a href="http://nodejs.cn/">Node.js 中文网</a> </li>
</ul>
<p>安装：</p>
<ul>
<li><a href="">我的安装教程</a> </li>
<li><a href="http://nodejs.cn/learn">官方文档</a>  </li>
</ul>
<h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>下载：</p>
<ul>
<li><a href="https://git-scm.com/">Git 官网</a> </li>
</ul>
<p>安装：</p>
<ul>
<li><a href="">我的安装教程</a> </li>
</ul>
<h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><p>关于Github账号的创建这里就不再赘述了。</p>
<h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><ol>
<li><p>创建仓库时需要注意，仓库名的格式必须是：<code>用户名.github.io</code>。其他选项可根据需要自行设置。</p>
<img src="/2022/03/13/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20220316104424889.png" class="" title="image-20220316104424889"> </li>
<li><p>创建好仓库后，就可以使用地址访问了</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">https://用户名.github.io</span><br></pre></td></tr></table></figure>

<p>或者在你的仓库中进入Settings，在网页最下面Github Pages，点击进入就可以看到你的站点信息了。</p>
<img src="/2022/03/13/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20220316105310854.png" class="" title="image-20220316105310854"> 

<img src="/2022/03/13/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20220316105332704.png" class="" title="image-20220316105332704">

<img src="/2022/03/13/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20220316105439070.png" class="" title="image-20220316105439070">  </li>
</ol>
<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>本地环境与远程仓库准备好后就可以来安装和使用Hexo了，官方文档在<a href="https://hexo.io/zh-cn/docs/">这里</a> </p>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><ol>
<li><p>打开命令行窗口，在命令行中使用npm安装Hexo：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli </span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><ol>
<li><p>选择一个目录用来保存网站资源，比如这里在桌面准备了一个 Blog 目录（以下命令以）：</p>
<img src="/2022/03/13/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20220314211133967.png" class="" title="image-20220314211133967"> </li>
<li><p>使用Git Bash进入该目录（在该目录下<code>右键 -&gt; Git Bash Here</code> 或者 <code>打开Git Bash Here使用命令进入指定目录</code> ）：</p>
<img src="/2022/03/13/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20220314211306592.png" class="" title="image-20220314211306592"> </li>
<li><p>Git Bash中执行初始化命令可以生成站点所需要的的文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">初始化站点文件</span></span><br><span class="line">hexo init</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">npm安装</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ol>
<li><p>生成网页文件，Git Bash输入命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></li>
<li><p>启动本地站点服务，Git Bash输入命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li>
<li><p>预览，浏览器地址栏输入：</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://localhost:4000</span><br></pre></td></tr></table></figure>

<img src="/2022/03/13/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20220316102402450.png" class="" title="image-20220316102402450"> </li>
</ol>
<h1 id="3-简单使用"><a href="#3-简单使用" class="headerlink" title="3. 简单使用"></a>3. 简单使用</h1><h2 id="新建"><a href="#新建" class="headerlink" title="新建"></a>新建</h2><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>更换主题可以到 <a href="https://hexo.io/themes/">Hexo主题站</a> 浏览下载，关于主题的安装可参考主题文档（一般Github主题项目中都会有介绍），有时间的话我会再写一篇关于主题更换的博客。</p>
<h1 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h1><h2 id="Hexo命令"><a href="#Hexo命令" class="headerlink" title="Hexo命令"></a>Hexo命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装hexo</span></span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">初始化</span></span><br><span class="line">hexo init </span><br><span class="line">npm install</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成网页文件 &amp; 本地预览</span></span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装推送插件 &amp; 推送文章</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>Github服务器位于国外，在国内访问速度受限，博客部署 <code>hexo d</code> 的时候经常会失败，这种情况就多部署几次直至成功就可以了。此外，如果访问速度过慢还可以使用一些加速手段（貌似部署时加速也没作用）或者用Gitee替换Github（搭建步骤基本一致，可以自行搜索）。</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github Pages</tag>
        <tag>Git</tag>
      </tags>
  </entry>
</search>
